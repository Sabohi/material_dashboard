{"ast":null,"code":"import _slicedToArray from \"/var/www/html/CZCRM/subuhi/material_dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/var/www/html/CZCRM/subuhi/material_dashboard/src/Actions/Menu.js\";\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { makeStyles } from '@material-ui/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nimport SimpleTable from '../Components/SimpleTable';\nimport ReactToPrint from \"react-to-print\"; //Import all possible actions\n// import FullScreenDialog from '../Actions/FullScreenDialog';\n\nvar ITEM_HEIGHT = 50;\nvar useStyles = makeStyles({\n  appBar: {\n    position: 'relative'\n  },\n  flex: {\n    flex: 1\n  }\n}); //function to show dialog box\n\nfunction Transition(props) {\n  return React.createElement(Slide, Object.assign({\n    direction: \"up\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }));\n}\n\nfunction CustomizedMenu(props) {\n  var _this = this;\n\n  var classes = useStyles();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      openDialog = _React$useState2[0],\n      setOpenDialog = _React$useState2[1];\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      anchorEl = _React$useState4[0],\n      setAnchorEl = _React$useState4[1];\n\n  var open = Boolean(anchorEl); //Function to be called on clicking action icon\n\n  var handleClick = function handleClick(event) {\n    setAnchorEl(event.currentTarget);\n  }; //Function to be called to close dialog\n\n\n  var handleClose = function handleClose() {\n    setAnchorEl(null);\n  }; //Function to be called on  closing a dialog box\n\n\n  var handleCloseDialog = function handleCloseDialog() {\n    setOpenDialog(false);\n  }; //Function to be called on clicking menuitem\n\n\n  var funToCall = function funToCall(index) {\n    //Close menu \n    handleClose();\n\n    switch (index) {\n      case 'print':\n        alert(_this);\n        break;\n\n      case 'showDetails':\n        setOpenDialog(true);\n        break;\n\n      default:\n    }\n  };\n\n  var dialogBox = ''; //Full Screen Dialog\n\n  if (props.actionData) {\n    dialogBox = React.createElement(Dialog, {\n      fullScreen: true,\n      open: openDialog,\n      onClose: handleCloseDialog,\n      TransitionComponent: Transition,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(AppBar, {\n      className: classes.appBar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Toolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      color: \"inherit\",\n      onClick: handleCloseDialog,\n      \"aria-label\": \"Close\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(CloseIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })), React.createElement(Typography, {\n      variant: \"h6\",\n      color: \"inherit\",\n      className: classes.flex,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, props.actionData.detailsData.dialogHeader))), React.createElement(\"div\", {\n      style: {\n        marginTop: \"60px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(SimpleTable, Object.assign({}, props.actionData.detailsData.tableData, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }))));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    \"aria-label\": \"More\",\n    \"aria-owns\": open ? 'long-menu' : undefined,\n    \"aria-haspopup\": \"true\",\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(MoreVertIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  })), React.createElement(Menu, {\n    id: \"long-menu\",\n    transformOrigin: {\n      vertical: 'top',\n      horizontal: 'left'\n    },\n    anchorEl: anchorEl,\n    open: open,\n    onClose: handleClose,\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 4.5,\n        width: 200,\n        marginTop: \"52px\"\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, props.options.map(function (option, index) {\n    return React.createElement(MenuItem, {\n      key: option,\n      selected: option === 'Pyxis',\n      onClick: function onClick() {\n        return funToCall(props.actionNames[index]);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, option);\n  })), dialogBox);\n} //ref={el => (this.componentRef = el)}\n\n\nexport default CustomizedMenu;","map":{"version":3,"sources":["/var/www/html/CZCRM/subuhi/material_dashboard/src/Actions/Menu.js"],"names":["React","IconButton","Menu","MenuItem","MoreVertIcon","makeStyles","Dialog","AppBar","Toolbar","Typography","CloseIcon","Slide","SimpleTable","ReactToPrint","ITEM_HEIGHT","useStyles","appBar","position","flex","Transition","props","CustomizedMenu","classes","useState","openDialog","setOpenDialog","anchorEl","setAnchorEl","open","Boolean","handleClick","event","currentTarget","handleClose","handleCloseDialog","funToCall","index","alert","dialogBox","actionData","detailsData","dialogHeader","marginTop","tableData","undefined","vertical","horizontal","style","maxHeight","width","options","map","option","actionNames"],"mappings":"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","sourcesContent":["import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { makeStyles } from '@material-ui/styles';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nimport SimpleTable from '../Components/SimpleTable';\n\nimport ReactToPrint from \"react-to-print\";\n\n//Import all possible actions\n// import FullScreenDialog from '../Actions/FullScreenDialog';\n\nconst ITEM_HEIGHT = 50;\n\nconst useStyles = makeStyles({\n  appBar: {\n    position: 'relative',\n  },\n  flex: {\n    flex: 1,\n  },\n});\n\n//function to show dialog box\nfunction Transition(props) {\n  return <Slide direction=\"up\" {...props} />;\n}\n\nfunction CustomizedMenu(props) {\n\n  const classes = useStyles();\n  const [openDialog, setOpenDialog] = React.useState(false);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  //Function to be called on clicking action icon\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  //Function to be called to close dialog\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  //Function to be called on  closing a dialog box\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n  }\n\n  //Function to be called on clicking menuitem\n  const funToCall = (index) => {\n    //Close menu \n    handleClose();\n    switch(index){\n      case 'print':\n      alert(this);\n      break;\n      case 'showDetails':\n        setOpenDialog(true);\n      break;\n      default:\n    }\n  };\n\n  let dialogBox = '';\n  //Full Screen Dialog\n  if(props.actionData){\n    dialogBox = (<Dialog fullScreen open={openDialog} onClose={handleCloseDialog} TransitionComponent={Transition}>\n    <AppBar className={classes.appBar}>\n      <Toolbar>\n        <IconButton color=\"inherit\" onClick={handleCloseDialog} aria-label=\"Close\">\n          <CloseIcon />\n        </IconButton>\n        <Typography variant=\"h6\" color=\"inherit\" className={classes.flex}>\n          {props.actionData.detailsData.dialogHeader}\n        </Typography>\n      </Toolbar>\n    </AppBar>\n    <div style={{marginTop: \"60px\"}}>\n      <SimpleTable {...props.actionData.detailsData.tableData}/>\n    </div>\n    </Dialog>);\n  }\n\n  return (\n    <div>\n      <IconButton \n        aria-label=\"More\"\n        aria-owns={open ? 'long-menu' : undefined}\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n      >\n      <MoreVertIcon />\n      </IconButton>\n      <Menu \n        id=\"long-menu\"\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'left',\n        }}\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n        PaperProps={{\n          style: {\n            maxHeight: ITEM_HEIGHT * 4.5,\n            width: 200,\n            marginTop: \"52px\"\n          },\n        }}\n      >\n        {props.options.map((option,index) => (\n          <MenuItem key={option} selected={option === 'Pyxis'} onClick={() => funToCall(props.actionNames[index])}>\n            {option}\n          </MenuItem>\n        ))}\n        {/* <MenuItem>\n          <ReactToPrint\n            trigger={() => <p>Print</p>}\n            content={() => this.componentRef}\n          />\n        </MenuItem> */}\n      </Menu>\n      \n      {dialogBox}\n    </div>\n  );\n}\n//ref={el => (this.componentRef = el)}\nexport default CustomizedMenu;"]},"metadata":{},"sourceType":"module"}